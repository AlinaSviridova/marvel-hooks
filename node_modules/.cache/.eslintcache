[{"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/index.js":"1","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/app/App.js":"2","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/appHeader/AppHeader.js":"3","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/charList/CharList.js":"4","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/charInfo/CharInfo.js":"5","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/errorBoundary/errorBoundary.js":"6","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/randomChar/RandomChar.js":"7","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/errorMessage/ErrorMessage.js":"8","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/spinner/Spinner.js":"9","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/services/MarvelService.js":"10","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/skeleton/Skeleton.js":"11","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/index.js":"12","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/app/App.js":"13","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/appHeader/AppHeader.js":"14","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/errorBoundary/errorBoundary.js":"15","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charInfo/CharInfo.js":"16","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charList/CharList.js":"17","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/randomChar/RandomChar.js":"18","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/errorMessage/ErrorMessage.js":"19","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/spinner/Spinner.js":"20","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/services/MarvelService.js":"21","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/skeleton/Skeleton.js":"22","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/hooks/http.hook.js":"23","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/appBanner/AppBanner.js":"24","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/comicsList/ComicsList.js":"25","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/index.js":"26","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/MainPage.js":"27","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/ComicsPage.js":"28","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/404.js":"29","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/SingleComicPage.js":"30","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/CharSearchForm/CharSearchForm.js":"31","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/SinglePage.js":"32","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/singleComicLayout/SingleComicLayout.js":"33","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/singleCharacterLayout/SingleCharacterLayout.js":"34"},{"size":475,"mtime":1655386873261,"results":"35","hashOfConfig":"36"},{"size":1228,"mtime":1655387516929,"results":"37","hashOfConfig":"36"},{"size":559,"mtime":1655386873258,"results":"38","hashOfConfig":"36"},{"size":3085,"mtime":1655386873259,"results":"39","hashOfConfig":"36"},{"size":3941,"mtime":1655386873258,"results":"40","hashOfConfig":"36"},{"size":470,"mtime":1655386873259,"results":"41","hashOfConfig":"36"},{"size":3476,"mtime":1655386873260,"results":"42","hashOfConfig":"36"},{"size":262,"mtime":1655386873259,"results":"43","hashOfConfig":"36"},{"size":4615,"mtime":1655386873261,"results":"44","hashOfConfig":"36"},{"size":1305,"mtime":1655386873264,"results":"45","hashOfConfig":"36"},{"size":666,"mtime":1655386873261,"results":"46","hashOfConfig":"36"},{"size":475,"mtime":1655386873261,"results":"47","hashOfConfig":"48"},{"size":1728,"mtime":1656244257288,"results":"49","hashOfConfig":"48"},{"size":908,"mtime":1655749627973,"results":"50","hashOfConfig":"48"},{"size":470,"mtime":1655386873259,"results":"51","hashOfConfig":"48"},{"size":3367,"mtime":1655717977227,"results":"52","hashOfConfig":"48"},{"size":3169,"mtime":1655717297215,"results":"53","hashOfConfig":"48"},{"size":2935,"mtime":1655716193623,"results":"54","hashOfConfig":"48"},{"size":262,"mtime":1655386873259,"results":"55","hashOfConfig":"48"},{"size":4615,"mtime":1655386873261,"results":"56","hashOfConfig":"48"},{"size":2592,"mtime":1656238033374,"results":"57","hashOfConfig":"48"},{"size":666,"mtime":1655386873261,"results":"58","hashOfConfig":"48"},{"size":903,"mtime":1655713756630,"results":"59","hashOfConfig":"48"},{"size":522,"mtime":1655386873257,"results":"60","hashOfConfig":"48"},{"size":2489,"mtime":1655798203004,"results":"61","hashOfConfig":"48"},{"size":200,"mtime":1655798414603,"results":"62","hashOfConfig":"48"},{"size":1165,"mtime":1656241187423,"results":"63","hashOfConfig":"48"},{"size":289,"mtime":1655747988662,"results":"64","hashOfConfig":"48"},{"size":584,"mtime":1655797734599,"results":"65","hashOfConfig":"48"},{"size":1914,"mtime":1655800785224,"results":"66","hashOfConfig":"48"},{"size":2815,"mtime":1656237989822,"results":"67","hashOfConfig":"48"},{"size":1279,"mtime":1656243934311,"results":"68","hashOfConfig":"48"},{"size":872,"mtime":1656243486403,"results":"69","hashOfConfig":"48"},{"size":529,"mtime":1656238886370,"results":"70","hashOfConfig":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1irmgv",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"dgfw3m",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"95"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"95"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"95"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"95"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/index.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/app/App.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/appHeader/AppHeader.js",["147","148","149"],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/charList/CharList.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/charInfo/CharInfo.js",["150"],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/errorBoundary/errorBoundary.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/randomChar/RandomChar.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/errorMessage/ErrorMessage.js",["151"],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/spinner/Spinner.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/services/MarvelService.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/skeleton/Skeleton.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/index.js",[],["152","153"],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/app/App.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/appHeader/AppHeader.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/errorBoundary/errorBoundary.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charInfo/CharInfo.js",["154","155"],"import {useState, useEffect} from'react';\nimport {PropTypes} from 'prop-types';\nimport './charInfo.scss';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton' \nimport thor from '../../resources/img/thor.jpeg';\n\nconst CharInfo = (props) => {\n \n    const [char, setChar] = useState (null);\n \n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect (() => {\n        updateChar();\n    }, [props.charId])\n  \n    const updateChar = () => {  \n        const {charId} = props; \n        if (!charId) {\n            return;\n        } \n            clearError();\n            getCharacter(charId) \n            .then(onCharLoaded)  \n    }\n  \n    const onCharLoaded = (char) => {  \n        setChar (char);  \n    }\n  \n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n        \n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n            \n        ) \n}\n\n\nconst View = ({char}) => {\n    const { name, description, thumbnail, thumbnailPath, homepage, wiki, comics } = char;\n    const comicsSlice = comics.slice(0,10); \n    const comicsList = comicsSlice.length > 0 ? <ComicsList comics={comicsSlice}/> : 'There is no comics here';\n    let tempImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('/') + 1) === 'image_not_available'\n    let containStyle = tempImg ? 'contain' : '';\n    return(\n        <>\n             <div className=\"char__basics\"> \n                    <img className={`${containStyle}`} src={thumbnail} alt={name}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">Homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                {description}</div>\n                {comicsList}\n        </>\n    )\n}\n\n\nconst ComicsList = ({comics}) => {\n\n\n        return(\n            <>\n            <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    { \n                        comics.map((item, i) => {\n                            return(\n                               <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li> \n                            )\n                              \n                        })\n                    } \n                </ul>\n            </>\n        )\n}\n\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\n\nexport default CharInfo;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charList/CharList.js",["156"],"import {useState, useRef, useEffect} from 'react';\nimport {PropTypes} from 'prop-types';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport './charList.scss';\n\n\n\n\nconst CharList = (props) => {\n\n    const [chars, setCharlist] = useState([]); \n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    // focusRef = React.createRef();\n    const {loading, error, getAllCharacters} = useMarvelService();\n   \n    // const marvelService = useMarvelService();\n\n    useEffect (() => {\n        onRequest(offset, true);\n    }, [])\n     \n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n        .then(createList) \n    } \n \n \n    const createList = (newCharList) => { \n        let ended = false; \n        if (newCharList.length < 9){\n            ended = true;\n        }\n \n        setCharlist(chars => [...chars, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n\n    } \n    const itemRefs = useRef([]);\n    \n    const focusOnItem = (id) => {\n \n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n \n        const elements = chars.map ((item, i) => {\n        const {name, thumbnail, id} = item; \n            return ( \n                 <li className=\"char__item\"\n                 key={id}\n                 ref={el => itemRefs.current[i] = el}\n                 tabIndex={0}\n                 onClick={() => {\n                    props.onCharSelected(id);\n                    focusOnItem(i)\n                }}\n                 onKeyPress={(e) => {\n                     if (e.key === ' ' || e.key === \"Enter\") {\n                         props.onCharSelected(id);\n                         focusOnItem(i);\n                     }\n                 }}> \n                        <img src={thumbnail} alt={name}/>\n                        <div className=\"char__name\">{name}</div>\n                    </li> \n            )\n        });\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n        return (\n            <div className=\"char__list\">\n                <ul className=\"char__grid\">\n                {errorMessage}\n                {spinner}\n                {elements}\n                </ul>\n                <button className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        ) \n}\n\nCharList.propTypes = { \n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/randomChar/RandomChar.js",["157"],"import {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/errorMessage/ErrorMessage.js",["158"],"import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n        style={{ display: 'block', width: '250px', height: '250px', objectFit:'contain', margin: \"0 auto\" }}\r\n        src={img} />    )\r\n}\r\n\r\nexport default ErrorMessage;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/spinner/Spinner.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/services/MarvelService.js",["159"],"import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n   const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n   const  _apiKey = 'apikey=7e218a62ee6da0dcd851c113e2e277eb';\r\n//    const _apiKey = 'apikey=bd19ba0a0373b6d52ce8b100dfe07355';\r\n   const _baseOffset = 210;\r\n\r\n    \r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {  \r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n        return _transformCharacter( res.data.results[0]);\r\n    }\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n    const getComic = async (id) => {  \r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n        return _transformComics( res.data.results[0]);\r\n    }\r\n    const _transformCharacter = (char) => {\r\n        return{\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnailPath: char.thumbnail.path,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n    const _transformComics = (comics) => {\r\n        return{\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description,\r\n            thumbnailPath: comics.thumbnail.path,\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No info about the number of pages',\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices.price ? `${comics.prices.price}` : 'not avaliable'\r\n        }\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic, getCharacterByName}\r\n}\r\n\r\n\r\nexport default useMarvelService;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/skeleton/Skeleton.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/hooks/http.hook.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/appBanner/AppBanner.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/comicsList/ComicsList.js",["160","161","162","163"],"import { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom'\nimport useMarvelService from '../../services/MarvelService'\nimport './comicsList.scss';\nimport uw from '../../resources/img/UW.png';\nimport xMen from '../../resources/img/x-men.png';\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect (() => {\n        onRequest(offset, true)\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n        .then(createList)\n    }\n\n    const createList = (newComicsList) => {\n        let ended = false; \n        if (newComicsList.length < 9){\n            ended = true;\n        }\n        setComicsList(comics => [...comics, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ComicsEnded => ended);\n    }\n\n    function renderItems (arr) {\n        \n        const items = arr.map((item, i) => {\n            const {title, thumbnail, price} = item;\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={thumbnail} alt={title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </Link>\n                </li>\n            )\n        })\n  \n        return ( \n                <ul className=\"comics__grid\">\n                    {items} \n                </ul> \n        ) \n    }\n    const items = renderItems(comicsList);\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null; \n   \n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n                {items} \n            <button className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/index.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/MainPage.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/ComicsPage.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/404.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/SingleComicPage.js",["164","165"],"import { useParams, Link } from 'react-router-dom';\nimport {useEffect, useState} from 'react';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport './singleComic.scss';\nimport xMen from '../../resources/img/x-men.png'; \n\nconst SingleComic = () => {\n\n    const {comicId} = useParams();\n    const [comic, setComic] = useState(null);\n    const {loading, error, getComic, clearError} = useMarvelService();\n\n    useEffect (() => {\n        updateComic();\n    }, [comicId])\n  \n    const updateComic = () => {  \n            clearError();\n            getComic(comicId) \n            .then(onComicLoaded)  \n    }\n  \n    const onComicLoaded = (comic) => {  \n        setComic (comic);  \n    }\n\n      const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\n        \n\n    return (\n        <>\n                {errorMessage}\n                {spinner}\n                {content}   \n        </>\n    )\n}\n\nconst View = ( {comic}) => {\n\n    const {title, description, pageCount, thumbnail, language, price} = comic;\n\n    return (\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComic;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/CharSearchForm/CharSearchForm.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/SinglePage.js",["166","167","168"],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/singleComicLayout/SingleComicLayout.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/singleCharacterLayout/SingleCharacterLayout.js",[],{"ruleId":"169","severity":1,"message":"170","line":7,"column":17,"nodeType":"171","endLine":7,"endColumn":29},{"ruleId":"169","severity":1,"message":"170","line":13,"column":25,"nodeType":"171","endLine":13,"endColumn":37},{"ruleId":"169","severity":1,"message":"170","line":15,"column":25,"nodeType":"171","endLine":15,"endColumn":37},{"ruleId":"172","severity":1,"message":"173","line":8,"column":8,"nodeType":"174","messageId":"175","endLine":8,"endColumn":12},{"ruleId":"176","severity":1,"message":"177","line":5,"column":9,"nodeType":"171","endLine":7,"endColumn":21},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"172","severity":1,"message":"173","line":8,"column":8,"nodeType":"174","messageId":"175","endLine":8,"endColumn":12},{"ruleId":"182","severity":1,"message":"183","line":18,"column":8,"nodeType":"184","endLine":18,"endColumn":22,"suggestions":"185"},{"ruleId":"182","severity":1,"message":"186","line":25,"column":8,"nodeType":"184","endLine":25,"endColumn":10,"suggestions":"187"},{"ruleId":"182","severity":1,"message":"183","line":21,"column":8,"nodeType":"184","endLine":21,"endColumn":10,"suggestions":"188"},{"ruleId":"176","severity":1,"message":"177","line":5,"column":9,"nodeType":"171","endLine":7,"endColumn":21},{"ruleId":"189","severity":1,"message":"190","line":45,"column":13,"nodeType":"191","messageId":"192","endLine":45,"endColumn":15},{"ruleId":"172","severity":1,"message":"193","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":10},{"ruleId":"172","severity":1,"message":"194","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":12},{"ruleId":"172","severity":1,"message":"195","line":15,"column":12,"nodeType":"174","messageId":"175","endLine":15,"endColumn":23},{"ruleId":"182","severity":1,"message":"186","line":21,"column":8,"nodeType":"184","endLine":21,"endColumn":10,"suggestions":"196"},{"ruleId":"172","severity":1,"message":"194","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":12},{"ruleId":"182","severity":1,"message":"197","line":17,"column":8,"nodeType":"184","endLine":17,"endColumn":17,"suggestions":"198"},{"ruleId":"172","severity":1,"message":"199","line":2,"column":19,"nodeType":"174","messageId":"175","endLine":2,"endColumn":25},{"ruleId":"182","severity":1,"message":"200","line":17,"column":8,"nodeType":"184","endLine":17,"endColumn":12,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":22,"column":9,"nodeType":"204","messageId":"205","endLine":28,"endColumn":10},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'thor' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["206"],"no-negated-in-lhs",["207"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.","ArrayExpression",["208"],"React Hook useEffect has missing dependencies: 'offset' and 'onRequest'. Either include them or remove the dependency array.",["209"],["210"],"no-dupe-keys","Duplicate key 'id'.","ObjectExpression","unexpected","'uw' is defined but never used.","'xMen' is defined but never used.","'comicsEnded' is assigned a value but never used.",["211"],"React Hook useEffect has a missing dependency: 'updateComic'. Either include it or remove the dependency array.",["212"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["213"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"216","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [props.charId, updateChar]",{"range":"225","text":"226"},"Update the dependencies array to be: [offset, onRequest]",{"range":"227","text":"228"},"Update the dependencies array to be: [updateChar]",{"range":"229","text":"230"},{"range":"231","text":"228"},"Update the dependencies array to be: [comicId, updateComic]",{"range":"232","text":"233"},"Update the dependencies array to be: [id, updateData]",{"range":"234","text":"235"},[566,580],"[props.charId, updateChar]",[744,746],"[offset, onRequest]",[612,614],"[updateChar]",[744,746],[568,577],"[comicId, updateComic]",[565,569],"[id, updateData]"]