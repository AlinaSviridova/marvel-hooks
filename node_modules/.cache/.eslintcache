[{"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/index.js":"1","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/app/App.js":"2","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/appHeader/AppHeader.js":"3","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/charList/CharList.js":"4","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/charInfo/CharInfo.js":"5","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/errorBoundary/errorBoundary.js":"6","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/randomChar/RandomChar.js":"7","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/errorMessage/ErrorMessage.js":"8","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/spinner/Spinner.js":"9","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/services/MarvelService.js":"10","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/skeleton/Skeleton.js":"11","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/index.js":"12","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/app/App.js":"13","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/appHeader/AppHeader.js":"14","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/errorBoundary/errorBoundary.js":"15","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charInfo/CharInfo.js":"16","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charList/CharList.js":"17","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/randomChar/RandomChar.js":"18","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/errorMessage/ErrorMessage.js":"19","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/spinner/Spinner.js":"20","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/services/MarvelService.js":"21","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/skeleton/Skeleton.js":"22","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/hooks/http.hook.js":"23","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/appBanner/AppBanner.js":"24","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/comicsList/ComicsList.js":"25"},{"size":475,"mtime":1655386873261,"results":"26","hashOfConfig":"27"},{"size":1228,"mtime":1655387516929,"results":"28","hashOfConfig":"27"},{"size":559,"mtime":1655386873258,"results":"29","hashOfConfig":"27"},{"size":3085,"mtime":1655386873259,"results":"30","hashOfConfig":"27"},{"size":3941,"mtime":1655386873258,"results":"31","hashOfConfig":"27"},{"size":470,"mtime":1655386873259,"results":"32","hashOfConfig":"27"},{"size":3476,"mtime":1655386873260,"results":"33","hashOfConfig":"27"},{"size":262,"mtime":1655386873259,"results":"34","hashOfConfig":"27"},{"size":4615,"mtime":1655386873261,"results":"35","hashOfConfig":"27"},{"size":1305,"mtime":1655386873264,"results":"36","hashOfConfig":"27"},{"size":666,"mtime":1655386873261,"results":"37","hashOfConfig":"27"},{"size":475,"mtime":1655386873261,"results":"38","hashOfConfig":"39"},{"size":1402,"mtime":1655721134305,"results":"40","hashOfConfig":"39"},{"size":559,"mtime":1655386873258,"results":"41","hashOfConfig":"39"},{"size":470,"mtime":1655386873259,"results":"42","hashOfConfig":"39"},{"size":3367,"mtime":1655717977227,"results":"43","hashOfConfig":"39"},{"size":3169,"mtime":1655717297215,"results":"44","hashOfConfig":"39"},{"size":2935,"mtime":1655716193623,"results":"45","hashOfConfig":"39"},{"size":262,"mtime":1655386873259,"results":"46","hashOfConfig":"39"},{"size":4615,"mtime":1655386873261,"results":"47","hashOfConfig":"39"},{"size":2341,"mtime":1655723597883,"results":"48","hashOfConfig":"39"},{"size":666,"mtime":1655386873261,"results":"49","hashOfConfig":"39"},{"size":903,"mtime":1655713756630,"results":"50","hashOfConfig":"39"},{"size":522,"mtime":1655386873257,"results":"51","hashOfConfig":"39"},{"size":2420,"mtime":1655727096192,"results":"52","hashOfConfig":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1irmgv",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"dgfw3m",{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/index.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/app/App.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/appHeader/AppHeader.js",["109","110","111"],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/charList/CharList.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/charInfo/CharInfo.js",["112"],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/errorBoundary/errorBoundary.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/randomChar/RandomChar.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/errorMessage/ErrorMessage.js",["113"],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/spinner/Spinner.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/services/MarvelService.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/skeleton/Skeleton.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/index.js",[],["114","115"],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/app/App.js",["116","117","118","119","120","121","122"],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/appHeader/AppHeader.js",["123","124","125"],"import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/errorBoundary/errorBoundary.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charInfo/CharInfo.js",["126","127"],"import {useState, useEffect} from'react';\nimport {PropTypes} from 'prop-types';\nimport './charInfo.scss';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton' \nimport thor from '../../resources/img/thor.jpeg';\n\nconst CharInfo = (props) => {\n \n    const [char, setChar] = useState (null);\n \n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect (() => {\n        updateChar();\n    }, [props.charId])\n  \n    const updateChar = () => {  \n        const {charId} = props; \n        if (!charId) {\n            return;\n        } \n            clearError();\n            getCharacter(charId) \n            .then(onCharLoaded)  \n    }\n  \n    const onCharLoaded = (char) => {  \n        setChar (char);  \n    }\n  \n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n        \n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n            \n        ) \n}\n\n\nconst View = ({char}) => {\n    const { name, description, thumbnail, thumbnailPath, homepage, wiki, comics } = char;\n    const comicsSlice = comics.slice(0,10); \n    const comicsList = comicsSlice.length > 0 ? <ComicsList comics={comicsSlice}/> : 'There is no comics here';\n    let tempImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('/') + 1) === 'image_not_available'\n    let containStyle = tempImg ? 'contain' : '';\n    return(\n        <>\n             <div className=\"char__basics\"> \n                    <img className={`${containStyle}`} src={thumbnail} alt={name}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">Homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                {description}</div>\n                {comicsList}\n        </>\n    )\n}\n\n\nconst ComicsList = ({comics}) => {\n\n\n        return(\n            <>\n            <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    { \n                        comics.map((item, i) => {\n                            return(\n                               <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li> \n                            )\n                              \n                        })\n                    } \n                </ul>\n            </>\n        )\n}\n\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\n\nexport default CharInfo;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charList/CharList.js",["128"],"import {useState, useRef, useEffect} from 'react';\nimport {PropTypes} from 'prop-types';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport './charList.scss';\n\n\n\n\nconst CharList = (props) => {\n\n    const [chars, setCharlist] = useState([]); \n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    // focusRef = React.createRef();\n    const {loading, error, getAllCharacters} = useMarvelService();\n   \n    // const marvelService = useMarvelService();\n\n    useEffect (() => {\n        onRequest(offset, true);\n    }, [])\n     \n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n        .then(createList) \n    } \n \n \n    const createList = (newCharList) => { \n        let ended = false; \n        if (newCharList.length < 9){\n            ended = true;\n        }\n \n        setCharlist(chars => [...chars, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n\n    } \n    const itemRefs = useRef([]);\n    \n    const focusOnItem = (id) => {\n \n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n \n        const elements = chars.map ((item, i) => {\n        const {name, thumbnail, id} = item; \n            return ( \n                 <li className=\"char__item\"\n                 key={id}\n                 ref={el => itemRefs.current[i] = el}\n                 tabIndex={0}\n                 onClick={() => {\n                    props.onCharSelected(id);\n                    focusOnItem(i)\n                }}\n                 onKeyPress={(e) => {\n                     if (e.key === ' ' || e.key === \"Enter\") {\n                         props.onCharSelected(id);\n                         focusOnItem(i);\n                     }\n                 }}> \n                        <img src={thumbnail} alt={name}/>\n                        <div className=\"char__name\">{name}</div>\n                    </li> \n            )\n        });\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n        return (\n            <div className=\"char__list\">\n                <ul className=\"char__grid\">\n                {errorMessage}\n                {spinner}\n                {elements}\n                </ul>\n                <button className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        ) \n}\n\nCharList.propTypes = { \n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/randomChar/RandomChar.js",["129"],"import {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/errorMessage/ErrorMessage.js",["130"],"import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n        style={{ display: 'block', width: '250px', height: '250px', objectFit:'contain', margin: \"0 auto\" }}\r\n        src={img} />    )\r\n}\r\n\r\nexport default ErrorMessage;","/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/spinner/Spinner.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/services/MarvelService.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/skeleton/Skeleton.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/hooks/http.hook.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/appBanner/AppBanner.js",[],"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/comicsList/ComicsList.js",["131","132","133","134","135"],{"ruleId":"136","severity":1,"message":"137","line":7,"column":17,"nodeType":"138","endLine":7,"endColumn":29},{"ruleId":"136","severity":1,"message":"137","line":13,"column":25,"nodeType":"138","endLine":13,"endColumn":37},{"ruleId":"136","severity":1,"message":"137","line":15,"column":25,"nodeType":"138","endLine":15,"endColumn":37},{"ruleId":"139","severity":1,"message":"140","line":8,"column":8,"nodeType":"141","messageId":"142","endLine":8,"endColumn":12},{"ruleId":"143","severity":1,"message":"144","line":5,"column":9,"nodeType":"138","endLine":7,"endColumn":21},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"139","severity":1,"message":"149","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":18},{"ruleId":"139","severity":1,"message":"150","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":16},{"ruleId":"139","severity":1,"message":"151","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":16},{"ruleId":"139","severity":1,"message":"152","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":21},{"ruleId":"139","severity":1,"message":"153","line":7,"column":8,"nodeType":"141","messageId":"142","endLine":7,"endColumn":18},{"ruleId":"139","severity":1,"message":"154","line":13,"column":12,"nodeType":"141","messageId":"142","endLine":13,"endColumn":24},{"ruleId":"139","severity":1,"message":"155","line":15,"column":11,"nodeType":"141","messageId":"142","endLine":15,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":7,"column":17,"nodeType":"138","endLine":7,"endColumn":29},{"ruleId":"136","severity":1,"message":"137","line":13,"column":25,"nodeType":"138","endLine":13,"endColumn":37},{"ruleId":"136","severity":1,"message":"137","line":15,"column":25,"nodeType":"138","endLine":15,"endColumn":37},{"ruleId":"139","severity":1,"message":"140","line":8,"column":8,"nodeType":"141","messageId":"142","endLine":8,"endColumn":12},{"ruleId":"156","severity":1,"message":"157","line":18,"column":8,"nodeType":"158","endLine":18,"endColumn":22,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"160","line":25,"column":8,"nodeType":"158","endLine":25,"endColumn":10,"suggestions":"161"},{"ruleId":"156","severity":1,"message":"157","line":21,"column":8,"nodeType":"158","endLine":21,"endColumn":10,"suggestions":"162"},{"ruleId":"143","severity":1,"message":"144","line":5,"column":9,"nodeType":"138","endLine":7,"endColumn":21},{"ruleId":"139","severity":1,"message":"163","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":10},{"ruleId":"139","severity":1,"message":"164","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":12},{"ruleId":"139","severity":1,"message":"165","line":14,"column":12,"nodeType":"141","messageId":"142","endLine":14,"endColumn":23},{"ruleId":"156","severity":1,"message":"160","line":20,"column":8,"nodeType":"158","endLine":20,"endColumn":10,"suggestions":"166"},{"ruleId":"136","severity":1,"message":"137","line":45,"column":21,"nodeType":"138","endLine":45,"endColumn":33},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'thor' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["167"],"no-negated-in-lhs",["168"],"'RandomChar' is defined but never used.","'CharList' is defined but never used.","'CharInfo' is defined but never used.","'ErrorBoundary' is defined but never used.","'decoration' is defined but never used.","'selectedChar' is assigned a value but never used.","'onCharSelected' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.","ArrayExpression",["169"],"React Hook useEffect has missing dependencies: 'offset' and 'onRequest'. Either include them or remove the dependency array.",["170"],["171"],"'uw' is defined but never used.","'xMen' is defined but never used.","'comicsEnded' is assigned a value but never used.",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"175","fix":"179"},"Update the dependencies array to be: [props.charId, updateChar]",{"range":"180","text":"181"},"Update the dependencies array to be: [offset, onRequest]",{"range":"182","text":"183"},"Update the dependencies array to be: [updateChar]",{"range":"184","text":"185"},{"range":"186","text":"183"},[566,580],"[props.charId, updateChar]",[744,746],"[offset, onRequest]",[612,614],"[updateChar]",[706,708]]