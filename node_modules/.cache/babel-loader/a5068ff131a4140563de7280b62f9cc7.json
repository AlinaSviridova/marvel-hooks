{"ast":null,"code":"var _jsxFileName = \"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/SinglePage.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useState, useRef, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from '../../appBanner/AppBanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SinglePage = _ref => {\n  _s();\n\n  let {\n    Component,\n    dataType\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState(null);\n  const {\n    loading,\n    error,\n    getComic,\n    getCharacter,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateData();\n  }, [id]);\n\n  const updateData = () => {\n    clearError();\n\n    switch (dataType) {\n      case 'comic':\n        getComic(id).then(onDataLoaded);\n        breakl;\n\n      case 'character':\n        getCharacter(id).then(onDataLoaded);\n    }\n  };\n\n  const onDataLoaded = data => {\n    setData(data);\n  };\n\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 34\n  }, this) : null;\n  const spinner = loading && !newItemLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 50\n  }, this) : null;\n  const content = !(loading || error || !data) ? /*#__PURE__*/_jsxDEV(Component, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 52\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), errorMessage, spinner, content]\n  }, void 0, true);\n};\n\n_s(SinglePage, \"DyrnpQIHeZPpSasAkmXGZJniufQ=\", false, function () {\n  return [useParams, useMarvelService];\n});\n\n_c = SinglePage;\nexport default SinglePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePage\");","map":{"version":3,"names":["useParams","useState","useRef","useEffect","useMarvelService","Spinner","ErrorMessage","AppBanner","SinglePage","Component","dataType","id","data","setData","loading","error","getComic","getCharacter","clearError","updateData","then","onDataLoaded","breakl","errorMessage","spinner","newItemLoading","content"],"sources":["/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/pages/SinglePage.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport {useState, useRef, useEffect} from 'react';\n \nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport AppBanner from '../../appBanner/AppBanner';\n\nconst SinglePage = ({Component, dataType}) => {\n\n    const {id} = useParams();\n    const [data, setData] = useState(null);\n    const {loading, error, getComic, getCharacter, clearError} = useMarvelService();\n\n    useEffect (() => {\n        updateData()\n    }, [id])\n\n    const updateData = () => {\n        clearError();\n\n        switch (dataType) {\n            case 'comic':\n                getComic(id).then(onDataLoaded);\n                breakl\n            case 'character':\n                getCharacter(id).then(onDataLoaded);\n        }\n    }\n\n    const onDataLoaded = (data) => {\n        setData(data);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    const content = !(loading || error || !data) ? <Component data={data}/> : null;\n\n    return (\n        <>\n            <AppBanner/>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n    )\n\n}\n\nexport default SinglePage;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAAQC,QAAR,EAAkBC,MAAlB,EAA0BC,SAA1B,QAA0C,OAA1C;AAEA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;;AAEA,MAAMC,UAAU,GAAG,QAA2B;EAAA;;EAAA,IAA1B;IAACC,SAAD;IAAYC;EAAZ,CAA0B;EAE1C,MAAM;IAACC;EAAD,IAAOX,SAAS,EAAtB;EACA,MAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM;IAACa,OAAD;IAAUC,KAAV;IAAiBC,QAAjB;IAA2BC,YAA3B;IAAyCC;EAAzC,IAAuDd,gBAAgB,EAA7E;EAEAD,SAAS,CAAE,MAAM;IACbgB,UAAU;EACb,CAFQ,EAEN,CAACR,EAAD,CAFM,CAAT;;EAIA,MAAMQ,UAAU,GAAG,MAAM;IACrBD,UAAU;;IAEV,QAAQR,QAAR;MACI,KAAK,OAAL;QACIM,QAAQ,CAACL,EAAD,CAAR,CAAaS,IAAb,CAAkBC,YAAlB;QACAC,MAAM;;MACV,KAAK,WAAL;QACIL,YAAY,CAACN,EAAD,CAAZ,CAAiBS,IAAjB,CAAsBC,YAAtB;IALR;EAOH,CAVD;;EAYA,MAAMA,YAAY,GAAIT,IAAD,IAAU;IAC3BC,OAAO,CAACD,IAAD,CAAP;EACH,CAFD;;EAIA,MAAMW,YAAY,GAAGR,KAAK,gBAAG,QAAC,YAAD;IAAA;IAAA;IAAA;EAAA,QAAH,GAAqB,IAA/C;EACA,MAAMS,OAAO,GAAGV,OAAO,IAAI,CAACW,cAAZ,gBAA6B,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QAA7B,GAA0C,IAA1D;EACA,MAAMC,OAAO,GAAG,EAAEZ,OAAO,IAAIC,KAAX,IAAoB,CAACH,IAAvB,iBAA+B,QAAC,SAAD;IAAW,IAAI,EAAEA;EAAjB;IAAA;IAAA;IAAA;EAAA,QAA/B,GAA0D,IAA1E;EAEA,oBACI;IAAA,wBACI,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKW,YAFL,EAGKC,OAHL,EAIKE,OAJL;EAAA,gBADJ;AASH,CAvCD;;GAAMlB,U;UAEWR,S,EAEgDI,gB;;;KAJ3DI,U;AAyCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}