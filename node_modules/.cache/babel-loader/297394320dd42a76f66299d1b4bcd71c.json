{"ast":null,"code":"var _jsxFileName = \"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/charInfo/CharInfo.js\";\nimport { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport './charInfo.scss';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport thor from '../../resources/img/thor.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CharInfo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      char: null,\n      loading: false,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.updateChar = () => {\n      const {\n        charId\n      } = this.props;\n\n      if (!charId) {\n        return;\n      }\n\n      this.onCharLoading();\n      this.marvelService.getCharacter(charId).then(this.onCharLoaded).catch(this.onError);\n    };\n\n    this.onCharLoading = () => {\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.onCharLoaded = char => {\n      this.setState({\n        char,\n        loading: false,\n        error: false\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  render() {\n    const {\n      char,\n      loading,\n      error\n    } = this.state;\n    const skeleton = char || loading || error ? null : /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 60\n    }, this);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error || !char) ? /*#__PURE__*/_jsxDEV(View, {\n      char: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 56\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__info\",\n      children: [skeleton, errorMessage, spinner, content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst View = _ref => {\n  let {\n    char\n  } = _ref;\n  const {\n    name,\n    description,\n    thumbnail,\n    thumbnailPath,\n    homepage,\n    wiki,\n    comics\n  } = char;\n  const comicsSlice = comics.slice(0, 10);\n  const comicsList = comicsSlice.length > 0 ? /*#__PURE__*/_jsxDEV(ComicsList, {\n    comics: comicsSlice\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 49\n  }, this) : 'There is no comics here';\n  let tempImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('/') + 1) === 'image_not_available';\n  let containStyle = tempImg ? 'contain' : '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: `${containStyle}`,\n        src: thumbnail,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), comicsList]\n  }, void 0, true);\n};\n\n_c = View;\n\nconst ComicsList = _ref2 => {\n  let {\n    comics\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: comics.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          children: item.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = ComicsList;\nCharInfo.propTypes = {\n  charId: PropTypes.number\n};\nexport default CharInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"View\");\n$RefreshReg$(_c2, \"ComicsList\");","map":{"version":3,"names":["Component","PropTypes","MarvelService","Spinner","ErrorMessage","Skeleton","thor","CharInfo","state","char","loading","error","marvelService","updateChar","charId","props","onCharLoading","getCharacter","then","onCharLoaded","catch","onError","setState","componentDidMount","componentDidUpdate","prevProps","prevState","render","skeleton","errorMessage","spinner","content","View","name","description","thumbnail","thumbnailPath","homepage","wiki","comics","comicsSlice","slice","comicsList","length","tempImg","substring","lastIndexOf","containStyle","ComicsList","map","item","i","propTypes","number"],"sources":["/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel/src/components/charInfo/CharInfo.js"],"sourcesContent":["import {Component} from'react';\nimport {PropTypes} from 'prop-types';\nimport './charInfo.scss';\nimport MarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton' \nimport thor from '../../resources/img/thor.jpeg';\n\nclass CharInfo extends Component{\n\n    state = {\n        char: null,\n        loading : false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n\n    componentDidMount() { \n        this.updateChar();\n    }\n    componentDidUpdate(prevProps, prevState) {\n       \n       if (this.props.charId !== prevProps.charId) {\n        this.updateChar();\n       } \n    }\n\n\n    updateChar = () => {  \n        const {charId} = this.props; \n        if (!charId) {\n            return;\n        } \n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(charId) \n            .then(this.onCharLoaded) \n            .catch(this.onError) \n    }\n\n\n\n\n    onCharLoading = ( ) => { \n        this.setState({ \n            loading : true\n        })\n    }\n    onCharLoaded = (char) => {  \n        this.setState({\n            char,\n            loading : false,\n            error: false\n        })\n    }\n\n    onError = () => { \n        this.setState({ \n            loading : false,\n            error: true\n        })\n    }\n\n\n\n    render(){\n\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n        \n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n            \n        )\n    }\n}\n\n\nconst View = ({char}) => {\n    const { name, description, thumbnail, thumbnailPath, homepage, wiki, comics } = char;\n    const comicsSlice = comics.slice(0,10); \n    const comicsList = comicsSlice.length > 0 ? <ComicsList comics={comicsSlice}/> : 'There is no comics here';\n    let tempImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('/') + 1) === 'image_not_available'\n    let containStyle = tempImg ? 'contain' : '';\n    return(\n        <>\n             <div className=\"char__basics\"> \n                    <img className={`${containStyle}`} src={thumbnail} alt={name}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">Homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                {description}</div>\n                {comicsList}\n        </>\n    )\n}\n\n\nconst ComicsList = ({comics}) => {\n\n\n        return(\n            <>\n            <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    { \n                        comics.map((item, i) => {\n                            return(\n                               <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li> \n                            )\n                              \n                        })\n                    } \n                </ul>\n            </>\n        )\n}\n\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\n\nexport default CharInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module"}