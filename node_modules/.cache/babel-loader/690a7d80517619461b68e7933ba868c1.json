{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const [loaing, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      'Content-Type': 'application/json'\n    };\n    setLoading(true);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n\n      if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n      }\n\n      const data = await response.json();\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n  const clearError = useCallback(() => setError(null), []);\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"tSY6M1smA2FdBDZu/3cf0thEOio=\");","map":{"version":3,"names":["useState","useCallback","useHttp","loaing","setLoading","error","setError","request","url","method","body","headers","response","fetch","ok","Error","res","status","data","json","e","message","clearError","loading"],"sources":["/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/hooks/http.hook.js"],"sourcesContent":[" import { useState, useCallback } from \"react\";\n\n export const useHttp = () => {\n    const [loaing, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        setLoading(true);\n\n        try {\n            const response = await fetch (url, {method, body, headers});\n\n            if(!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n            }\n\n            const data = await response.json()\n\n            setLoading(false);\n            return data;\n        } catch (e) {\n\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n\n    }, [])\n\n    const clearError = useCallback( () => setError(null), []);\n\n    return {loading, request, error, clearError}\n }"],"mappings":";;AAAC,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAC1B,MAAM,CAACC,MAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,KAAD,CAArC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAMO,OAAO,GAAGN,WAAW,CAAC,gBAAOO,GAAP,EAA4F;IAAA,IAAhFC,MAAgF,uEAAvE,KAAuE;IAAA,IAAhEC,IAAgE,uEAAzD,IAAyD;IAAA,IAAnDC,OAAmD,uEAAzC;MAAC,gBAAgB;IAAjB,CAAyC;IAEpHP,UAAU,CAAC,IAAD,CAAV;;IAEA,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAEL,GAAF,EAAO;QAACC,MAAD;QAASC,IAAT;QAAeC;MAAf,CAAP,CAA5B;;MAEA,IAAG,CAACC,QAAQ,CAACE,EAAb,EAAiB;QACb,MAAM,IAAIC,KAAJ,CAAW,mBAAkBP,GAAI,aAAYQ,GAAG,CAACC,MAAO,EAAxD,CAAN;MACH;;MAED,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;MAEAf,UAAU,CAAC,KAAD,CAAV;MACA,OAAOc,IAAP;IACH,CAXD,CAWE,OAAOE,CAAP,EAAU;MAERhB,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAACc,CAAC,CAACC,OAAH,CAAR;MACA,MAAMD,CAAN;IACH;EAEJ,CAtB0B,EAsBxB,EAtBwB,CAA3B;EAwBA,MAAME,UAAU,GAAGrB,WAAW,CAAE,MAAMK,QAAQ,CAAC,IAAD,CAAhB,EAAwB,EAAxB,CAA9B;EAEA,OAAO;IAACiB,OAAD;IAAUhB,OAAV;IAAmBF,KAAnB;IAA0BiB;EAA1B,CAAP;AACF,CA/BM;;GAAMpB,O"},"metadata":{},"sourceType":"module"}