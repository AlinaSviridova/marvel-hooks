{"ast":null,"code":"var _jsxFileName = \"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/CharSearchForm/CharSearchForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './CharSearchForm.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage, yupToFormErrors } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharSearchForm = () => {\n  _s();\n\n  const [chars, setChar] = useState(null);\n  const {\n    loading,\n    error\n  } = useMarvelService(); // const errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__search-form\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        charName: ''\n      },\n      validationSchema: yupToFormErrors.object({}),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"char__search-label\",\n          htmlFor: \"charName\",\n          children: \"Or find a character by name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__search-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            id: \"charName\",\n            name: \"charName\",\n            type: \"text\",\n            placeholder: \"Enter name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"find\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharSearchForm, \"bRESnBGx1cL2JbG+hixm6YUU0Mg=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = CharSearchForm;\nexport default CharSearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharSearchForm\");","map":{"version":3,"names":["useState","useMarvelService","ErrorMessage","Formik","Form","Field","FormikErrorMessage","yupToFormErrors","CharSearchForm","chars","setChar","loading","error","charName","object"],"sources":["/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/CharSearchForm/CharSearchForm.js"],"sourcesContent":["import { useState } from 'react';\nimport './CharSearchForm.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage, yupToFormErrors } from 'formik';\n\n\nconst CharSearchForm = () => {\n    \n    const [chars, setChar] = useState(null);\n    const {loading, error} = useMarvelService();    \n    // const errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\n\n\n\n    return (\n        <div className=\"char__search-form\">\n         <Formik\n            initialValues = {{\n                charName: ''\n            }}\n            validationSchema = {yupToFormErrors.object({\n                \n            })}\n         >\n            <Form>\n                <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\n                <div className=\"char__search-wrapper\">\n                    <Field \n                        id=\"charName\" \n                        name='charName' \n                        type='text' \n                        placeholder=\"Enter name\"/>\n                    <button \n                        type='submit' \n                        className=\"button button__main\">\n                        <div className=\"inner\">find</div>\n                    </button>\n                </div>\n            </Form>\n        </Formik> \n        {/* {errorMessage} */}\n    </div>\n    )\n}\n\nexport default CharSearchForm;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,uBAAP;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BH,YAAY,IAAII,kBAA9C,EAAkEC,eAAlE,QAAyF,QAAzF;;;AAGA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAEzB,MAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBV,QAAQ,CAAC,IAAD,CAAjC;EACA,MAAM;IAACW,OAAD;IAAUC;EAAV,IAAmBX,gBAAgB,EAAzC,CAHyB,CAIzB;;EAIA,oBACI;IAAK,SAAS,EAAC,mBAAf;IAAA,uBACC,QAAC,MAAD;MACG,aAAa,EAAI;QACbY,QAAQ,EAAE;MADG,CADpB;MAIG,gBAAgB,EAAIN,eAAe,CAACO,MAAhB,CAAuB,EAAvB,CAJvB;MAAA,uBAQG,QAAC,IAAD;QAAA,wBACI;UAAO,SAAS,EAAC,oBAAjB;UAAsC,OAAO,EAAC,UAA9C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,sBAAf;UAAA,wBACI,QAAC,KAAD;YACI,EAAE,EAAC,UADP;YAEI,IAAI,EAAC,UAFT;YAGI,IAAI,EAAC,MAHT;YAII,WAAW,EAAC;UAJhB;YAAA;YAAA;YAAA;UAAA,QADJ,eAMI;YACI,IAAI,EAAC,QADT;YAEI,SAAS,EAAC,qBAFd;YAAA,uBAGI;cAAK,SAAS,EAAC,OAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAHJ;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA;IARH;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADJ;AA6BH,CArCD;;GAAMN,c;UAGuBP,gB;;;KAHvBO,c;AAuCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}