{"ast":null,"code":"var _jsxFileName = \"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charList/CharList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport useMarvelService from '../../services/MarvelService'; // import Spinner from '../spinner/Spinner'\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharList = props => {\n  _s();\n\n  const [chars, setCharlist] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded] = useState(false); // focusRef = React.createRef();\n\n  const {\n    loading,\n    error,\n    getAllCharacters\n  } = useMarvelService(); // const marvelService = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset).then(createList);\n  };\n\n  const createList = newCharList => {\n    let ended = false;\n\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharlist(chars => [...chars, ...newCharList]);\n    setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + 9);\n    charEnded(charEnded => ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = id => {\n    itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n    itemRefs.current[id].classList.add('char__item_selected');\n    itemRefs.current[id].focus();\n  };\n\n  const elements = chars.map((item, i) => {\n    const {\n      name,\n      thumbnail,\n      id\n    } = item;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"char__item\",\n      ref: el => itemRefs.current[i] = el,\n      tabIndex: 0,\n      onClick: () => {\n        props.onCharSelected(id);\n        focusOnItem(i);\n      },\n      onKeyPress: e => {\n        if (e.key === ' ' || e.key === \"Enter\") {\n          props.onCharSelected(id);\n          focusOnItem(i);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"char__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newItemLoading,\n      style: {\n        'display': charEnded ? 'none' : 'block'\n      },\n      onClick: () => onRequest(offset),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CharList, \"N2WGeWtdgr/wH16tM1e57ZFeunk=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = CharList;\nCharList.propTypes = {\n  onCharSelected: PropTypes.func\n};\nexport default CharList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"names":["useState","useRef","useEffect","PropTypes","useMarvelService","Spinner","ErrorMessage","CharList","props","chars","setCharlist","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","loading","error","getAllCharacters","onRequest","initial","then","createList","newCharList","ended","length","itemRefs","focusOnItem","id","current","forEach","item","classList","remove","add","focus","elements","map","i","name","thumbnail","el","onCharSelected","e","key","propTypes","func"],"sources":["/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charList/CharList.js"],"sourcesContent":["import {useState, useRef, useEffect} from 'react';\nimport {PropTypes} from 'prop-types';\nimport useMarvelService from '../../services/MarvelService'\n// import Spinner from '../spinner/Spinner'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport './charList.scss';\n\n\n\n\nconst CharList = (props) => {\n\n    const [chars, setCharlist] = useState([]); \n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded] = useState(false);\n\n    // focusRef = React.createRef();\n    const {loading, error, getAllCharacters} = useMarvelService();\n   \n    // const marvelService = useMarvelService();\n\n    useEffect (() => {\n        onRequest(offset, true);\n    }, [])\n     \n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n        .then(createList) \n    } \n \n \n    const createList = (newCharList) => { \n        let ended = false; \n        if (newCharList.length < 9){\n            ended = true;\n        }\n \n        setCharlist(chars => [...chars, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        charEnded(charEnded => ended);\n\n    } \n    const itemRefs = useRef([]);\n    \n    const focusOnItem = (id) => {\n \n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n \n        const elements = chars.map ((item, i) => {\n        const {name, thumbnail, id} = item; \n            return ( \n                 <li className=\"char__item\"\n                 key={id}\n                 ref={el => itemRefs.current[i] = el}\n                 tabIndex={0}\n                 onClick={() => {\n                    props.onCharSelected(id);\n                    focusOnItem(i)\n                }}\n                 onKeyPress={(e) => {\n                     if (e.key === ' ' || e.key === \"Enter\") {\n                         props.onCharSelected(id);\n                         focusOnItem(i);\n                     }\n                 }}> \n                        <img src={thumbnail} alt={name}/>\n                        <div className=\"char__name\">{name}</div>\n                    </li> \n            )\n        });\n\n        return (\n            <div className=\"char__list\">\n                <ul className=\"char__grid\">\n                {elements}\n                </ul>\n                <button className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        ) \n}\n\nCharList.propTypes = { \n    onCharSelected: PropTypes.func\n}\n\nexport default CharList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}