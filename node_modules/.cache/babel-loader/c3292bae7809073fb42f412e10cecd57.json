{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const [process, setProcess] = useState('waiting');\n  const request = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      'Content-Type': 'application/json'\n    };\n    setProcess('loading');\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n\n      if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setProcess('error');\n      throw e;\n    }\n  }, []);\n  const clearError = useCallback(() => {\n    setProcess('loading');\n  }, []);\n  return {\n    request,\n    clearError,\n    process,\n    setProcess\n  };\n};\n\n_s(useHttp, \"qtD5Ak46pkdtiKA9sffv0tgvE4k=\");","map":{"version":3,"names":["useState","useCallback","useHttp","process","setProcess","request","url","method","body","headers","response","fetch","ok","Error","status","data","json","setLoading","e","clearError"],"sources":["/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/hooks/http.hook.js"],"sourcesContent":[" import { useState, useCallback } from \"react\";\n\n export const useHttp = () => { \n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n \n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if(!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json()\n\n            setLoading(false);\n            return data;\n        } catch (e) {\n \n            setProcess('error');\n            throw e;\n        }\n\n    }, [])\n\n    const clearError = useCallback( () => {\n        setProcess('loading');\n    }, []);\n\n    return {request,clearError, process, setProcess}\n }"],"mappings":";;AAAC,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAC1B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,SAAD,CAAtC;EAEA,MAAMK,OAAO,GAAGJ,WAAW,CAAC,gBAAOK,GAAP,EAA4F;IAAA,IAAhFC,MAAgF,uEAAvE,KAAuE;IAAA,IAAhEC,IAAgE,uEAAzD,IAAyD;IAAA,IAAnDC,OAAmD,uEAAzC;MAAC,gBAAgB;IAAjB,CAAyC;IAEpHL,UAAU,CAAC,SAAD,CAAV;;IAEA,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;QAACC,MAAD;QAASC,IAAT;QAAeC;MAAf,CAAN,CAA5B;;MAEA,IAAG,CAACC,QAAQ,CAACE,EAAb,EAAiB;QACb,MAAM,IAAIC,KAAJ,CAAW,mBAAkBP,GAAI,aAAYI,QAAQ,CAACI,MAAO,EAA7D,CAAN;MACH;;MAED,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;MAEAC,UAAU,CAAC,KAAD,CAAV;MACA,OAAOF,IAAP;IACH,CAXD,CAWE,OAAOG,CAAP,EAAU;MAERd,UAAU,CAAC,OAAD,CAAV;MACA,MAAMc,CAAN;IACH;EAEJ,CArB0B,EAqBxB,EArBwB,CAA3B;EAuBA,MAAMC,UAAU,GAAGlB,WAAW,CAAE,MAAM;IAClCG,UAAU,CAAC,SAAD,CAAV;EACH,CAF6B,EAE3B,EAF2B,CAA9B;EAIA,OAAO;IAACC,OAAD;IAASc,UAAT;IAAqBhB,OAArB;IAA8BC;EAA9B,CAAP;AACF,CA/BM;;GAAMF,O"},"metadata":{},"sourceType":"module"}