{"ast":null,"code":"var _jsxFileName = \"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/randomChar/RandomChar.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomChar = () => {\n  _s();\n\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getCharacter,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []); // const onCharLoading = () => { \n  //     setChar(char); \n  // }\n\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 38\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 35\n  }, this) : null;\n  const content = !(loading || error) ? /*#__PURE__*/_jsxDEV(View, {\n    char: char\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 47\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar\",\n    children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__static\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 52\n        }, this), \"Do you want to get to know him better?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: \"Or choose another one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: updateChar,\n          className: \"inner\",\n          children: \"try it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mjolnir,\n        alt: \"mjolnir\",\n        className: \"randomchar__decoration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n};\n\n_s(RandomChar, \"fo4yMk3gnyKtV8rawMz5WHoIZlA=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = RandomChar;\n\nconst View = _ref => {\n  let {\n    char\n  } = _ref;\n  const {\n    name,\n    description,\n    thumbnail,\n    thumbnailPath,\n    homepage,\n    wiki\n  } = char;\n  let containStyle = 'randomchar__contain';\n\n  if (thumbnailPath !== undefined) {\n    let tempImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('/') + 1) === 'image_not_available';\n    let containStyle = tempImg ? 'randomchar__contain' : '';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: `randomchar__img ${containStyle}`,\n      src: thumbnail,\n      alt: \"Random character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description ? description : 'Sorry babe, no description here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = View;\nexport default RandomChar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RandomChar\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"names":["useState","useEffect","useMarvelService","Spinner","ErrorMessage","mjolnir","RandomChar","char","setChar","loading","error","getCharacter","clearError","updateChar","timerId","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","errorMessage","spinner","content","View","name","description","thumbnail","thumbnailPath","homepage","wiki","containStyle","undefined","tempImg","substring","lastIndexOf"],"sources":["/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/randomChar/RandomChar.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport './randomChar.scss'; \nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n \n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n     useEffect (() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n        return () => {\n            clearInterval(timerId)\n        }\n     },[])\n  \n    // const onCharLoading = () => { \n    //     setChar(char); \n    // }\n\n    const onCharLoaded = (char) => {   \n        setChar(char); \n    } \n    \n    const updateChar = () => { \n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); \n        getCharacter(id) \n        .then(onCharLoaded);\n    }\n\n \n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n\n        return (\n            <div className=\"randomchar\"> \n                {errorMessage}{spinner}{content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div onClick={updateChar} className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        ) \n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, thumbnailPath, homepage, wiki} = char;\n    let containStyle = 'randomchar__contain';\n    if (thumbnailPath !== undefined){\n        let tempImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('/') + 1) === 'image_not_available'\n        let containStyle = tempImg ? 'randomchar__contain' : '';\n    } \n    \n    return(\n      <div className=\"randomchar__block\">\n                <img className={`randomchar__img ${containStyle}`} src={thumbnail} alt=\"Random character\"/>\n                <div className=\"randomchar__info\">\n                    <p className=\"randomchar__name\">{name}</p>\n                    <p className=\"randomchar__descr\">\n                        {description ? description : 'Sorry babe, no description here'}\n                    </p>\n                    <div className=\"randomchar__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">wiki</div>\n                        </a>\n                    </div>\n                </div>\n     </div>  \n    )\n\n}\n\nexport default RandomChar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}