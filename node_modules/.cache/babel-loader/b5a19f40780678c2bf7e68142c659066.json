{"ast":null,"code":"var _jsxFileName = \"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/CharSearchForm/CharSearchForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './CharSearchForm.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage, yupToFormErrors } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharSearchForm = () => {\n  _s();\n\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    clearError,\n    getCharacterByName\n  } = useMarvelService();\n\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n\n  const updateChar = name => {\n    clearError();\n    getCharacterByName(name).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__search-critical-error\",\n    children: /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 79\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 34\n  }, this) : null;\n  const results = !char ? null : char.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__search-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__search-success\",\n      children: [\"Found! Visit \", char[0].name, \" page?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/characters/${char[0].id}`,\n      className: \"button button__secondary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"To page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__search-error\",\n    children: \"The character was not found. Check the name and try again\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__search-form\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        charName: ''\n      },\n      validationSchema: Yup.object({\n        charName: Yup.string().required('This field is required')\n      }),\n      onSubmit: _ref => {\n        let {\n          charName\n        } = _ref;\n        updateChar(charName);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"char__search-label\",\n          htmlFor: \"charName\",\n          children: \"Or find a character by name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__search-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            id: \"charName\",\n            name: \"charName\",\n            type: \"text\",\n            placeholder: \"Enter name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button button__main\",\n            disabled: loading,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"find\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this), results, errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharSearchForm, \"kDC7U7gVT6VCawhaX2YL+87F/So=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = CharSearchForm;\nexport default CharSearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharSearchForm\");","map":{"version":3,"names":["useState","useMarvelService","ErrorMessage","Formik","Form","Field","FormikErrorMessage","yupToFormErrors","Yup","CharSearchForm","char","setChar","loading","error","clearError","getCharacterByName","onCharLoaded","updateChar","name","then","errorMessage","results","length","id","charName","object","string","required"],"sources":["/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/CharSearchForm/CharSearchForm.js"],"sourcesContent":["import { useState } from 'react';\nimport './CharSearchForm.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage, yupToFormErrors } from 'formik';\nimport * as Yup from 'yup';\n\nconst CharSearchForm = () => {\n    \n    const [char, setChar] = useState(null);\n    const {loading, error, clearError, getCharacterByName} = useMarvelService();    \n    \n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n    const updateChar = (name) => {\n        clearError();\n\n        getCharacterByName(name)\n            .then(onCharLoaded);\n\n    }\n    \n    const errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\n    \n    const results = !char ? null : char.length > 0 ?\n        <div className=\"char__search-wrapper\">\n            <div className=\"char__search-success\">Found! Visit {char[0].name} page?</div>\n            <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\n                <div className=\"inner\">To page</div>\n            </Link>\n        </div> :\n        <div className=\"char__search-error\">\n            The character was not found. Check the name and try again\n        </div>;\n   \n\n    return (\n        <div className=\"char__search-form\">\n         <Formik\n            initialValues = {{\n                charName: ''\n            }}\n            validationSchema = {Yup.object({\n                charName: Yup.string().required('This field is required')\n            })}\n            onSubmit = { ({charName}) => {\n                updateChar(charName);\n            }}\n         >\n            <Form>\n                <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\n                <div className=\"char__search-wrapper\">\n                    <Field \n                        id=\"charName\" \n                        name='charName' \n                        type='text' \n                        placeholder=\"Enter name\"/>\n                    <button \n                        type='submit' \n                        className=\"button button__main\"\n                        disabled={loading}>\n                        <div className=\"inner\">find</div>\n                    </button>\n                </div>\n            </Form>\n        </Formik> \n        {results}\n        {errorMessage}\n    </div>\n    )\n}\n\nexport default CharSearchForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}