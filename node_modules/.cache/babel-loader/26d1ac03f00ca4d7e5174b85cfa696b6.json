{"ast":null,"code":"var _jsxFileName = \"/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charInfo/CharInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport './charInfo.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport thor from '../../resources/img/thor.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharInfo = props => {\n  _s();\n\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getCharacter,\n    clearError,\n    process,\n    setProcess\n  } = useMarvelService();\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const {\n      charId\n    } = props;\n\n    if (!charId) {\n      return;\n    }\n\n    clearError();\n    getCharacter(charId).then(onCharLoaded).then(() => setProcess('confirmed'));\n  };\n\n  const onCharLoaded = char => {\n    setChar(char);\n  }; // FSM rebuild\n\n\n  const setContent = (process, char) => {\n    switch (process) {\n      case 'waiting':\n        return /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this);\n        break;\n\n      case 'loading':\n        return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this);\n        break;\n\n      case 'confirmed':\n        return /*#__PURE__*/_jsxDEV(View, {\n          char: char\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this);\n        break;\n\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this);\n        break;\n\n      default:\n        throw new Error('Unexpected process state');\n    }\n  }; // const skeleton = char || loading || error ? null : <Skeleton/>\n  // const errorMessage = error ? <ErrorMessage/> : null;\n  // const spinner = loading ? <Spinner/> : null;\n  // const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__info\",\n    children: setContent(process, char)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CharInfo, \"K6/as7A/5k5KDzlPVPCI6gZiRJs=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = CharInfo;\n\nconst View = _ref => {\n  let {\n    char\n  } = _ref;\n  const {\n    name,\n    description,\n    thumbnail,\n    thumbnailPath,\n    homepage,\n    wiki,\n    comics\n  } = char;\n  const comicsSlice = comics.slice(0, 10);\n  const comicsList = comicsSlice.length > 0 ? /*#__PURE__*/_jsxDEV(ComicsList, {\n    comics: comicsSlice\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 49\n  }, this) : 'There is no comics here';\n  let tempImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('/') + 1) === 'image_not_available';\n  let containStyle = tempImg ? 'contain' : '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: `${containStyle}`,\n        src: thumbnail,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), comicsList]\n  }, void 0, true);\n};\n\n_c2 = View;\n\nconst ComicsList = _ref2 => {\n  let {\n    comics\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: comics.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          children: item.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = ComicsList;\nCharInfo.propTypes = {\n  charId: PropTypes.number\n};\nexport default CharInfo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CharInfo\");\n$RefreshReg$(_c2, \"View\");\n$RefreshReg$(_c3, \"ComicsList\");","map":{"version":3,"names":["useState","useEffect","PropTypes","useMarvelService","Spinner","ErrorMessage","Skeleton","thor","CharInfo","props","char","setChar","loading","error","getCharacter","clearError","process","setProcess","updateChar","charId","then","onCharLoaded","setContent","Error","View","name","description","thumbnail","thumbnailPath","homepage","wiki","comics","comicsSlice","slice","comicsList","length","tempImg","substring","lastIndexOf","containStyle","ComicsList","map","item","i","propTypes","number"],"sources":["/Users/alinasvyrydova/Downloads/Development/Course1/Files/marvel-hooks/marvel-hooks/src/components/charInfo/CharInfo.js"],"sourcesContent":["import {useState, useEffect} from'react';\nimport {PropTypes} from 'prop-types';\nimport './charInfo.scss';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton' \nimport thor from '../../resources/img/thor.jpeg';\n\nconst CharInfo = (props) => {\n \n    const [char, setChar] = useState (null);\n \n    const {loading, error, getCharacter, clearError, process, setProcess} = useMarvelService();\n\n    useEffect (() => {\n        updateChar();\n    }, [props.charId])\n  \n    const updateChar = () => {  \n        const {charId} = props; \n        if (!charId) {\n            return;\n        } \n            clearError();\n            getCharacter(charId) \n            .then(onCharLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n  \n    const onCharLoaded = (char) => {  \n        setChar (char);  \n    }\n  \n    // FSM rebuild\n\n    const setContent = (process, char) => {\n        switch (process) {\n            case 'waiting':\n                return <Skeleton/>;\n                break;\n            case 'loading':\n                return <Spinner/>;\n                break;\n            case 'confirmed':\n                return <View char={char}/>;\n                break;\n            case 'error':\n                return <ErrorMessage/>\n                break;\n            default:\n                throw new Error('Unexpected process state');\n        }\n    }\n\n        // const skeleton = char || loading || error ? null : <Skeleton/>\n        // const errorMessage = error ? <ErrorMessage/> : null;\n        // const spinner = loading ? <Spinner/> : null;\n        // const content = !(loading || error || !char) ? <View char={char}/> : null;\n        \n        return (\n            <div className=\"char__info\">\n                {/* {skeleton}\n                {errorMessage}\n                {spinner}\n                {content} */}\n                {setContent(process, char)}\n            </div>\n            \n        ) \n}\n\n\nconst View = ({char}) => {\n    const { name, description, thumbnail, thumbnailPath, homepage, wiki, comics } = char;\n    const comicsSlice = comics.slice(0,10); \n    const comicsList = comicsSlice.length > 0 ? <ComicsList comics={comicsSlice}/> : 'There is no comics here';\n    let tempImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('/') + 1) === 'image_not_available'\n    let containStyle = tempImg ? 'contain' : '';\n    return(\n        <>\n             <div className=\"char__basics\"> \n                    <img className={`${containStyle}`} src={thumbnail} alt={name}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">Homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                {description}</div>\n                {comicsList}\n        </>\n    )\n}\n\n\nconst ComicsList = ({comics}) => {\n\n\n        return(\n            <>\n            <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    { \n                        comics.map((item, i) => {\n                            return(\n                               <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li> \n                            )\n                              \n                        })\n                    } \n                </ul>\n            </>\n        )\n}\n\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\n\nexport default CharInfo;"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,OAAO,iBAAP;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAExB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAE,IAAF,CAAhC;EAEA,MAAM;IAACY,OAAD;IAAUC,KAAV;IAAiBC,YAAjB;IAA+BC,UAA/B;IAA2CC,OAA3C;IAAoDC;EAApD,IAAkEd,gBAAgB,EAAxF;EAEAF,SAAS,CAAE,MAAM;IACbiB,UAAU;EACb,CAFQ,EAEN,CAACT,KAAK,CAACU,MAAP,CAFM,CAAT;;EAIA,MAAMD,UAAU,GAAG,MAAM;IACrB,MAAM;MAACC;IAAD,IAAWV,KAAjB;;IACA,IAAI,CAACU,MAAL,EAAa;MACT;IACH;;IACGJ,UAAU;IACVD,YAAY,CAACK,MAAD,CAAZ,CACCC,IADD,CACMC,YADN,EAECD,IAFD,CAEM,MAAMH,UAAU,CAAC,WAAD,CAFtB;EAGP,CATD;;EAWA,MAAMI,YAAY,GAAIX,IAAD,IAAU;IAC3BC,OAAO,CAAED,IAAF,CAAP;EACH,CAFD,CArBwB,CAyBxB;;;EAEA,MAAMY,UAAU,GAAG,CAACN,OAAD,EAAUN,IAAV,KAAmB;IAClC,QAAQM,OAAR;MACI,KAAK,SAAL;QACI,oBAAO,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QAAP;QACA;;MACJ,KAAK,SAAL;QACI,oBAAO,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA,QAAP;QACA;;MACJ,KAAK,WAAL;QACI,oBAAO,QAAC,IAAD;UAAM,IAAI,EAAEN;QAAZ;UAAA;UAAA;UAAA;QAAA,QAAP;QACA;;MACJ,KAAK,OAAL;QACI,oBAAO,QAAC,YAAD;UAAA;UAAA;UAAA;QAAA,QAAP;QACA;;MACJ;QACI,MAAM,IAAIa,KAAJ,CAAU,0BAAV,CAAN;IAdR;EAgBH,CAjBD,CA3BwB,CA8CpB;EACA;EACA;EACA;;;EAEA,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA,UAKKD,UAAU,CAACN,OAAD,EAAUN,IAAV;EALf;IAAA;IAAA;IAAA;EAAA,QADJ;AAUP,CA7DD;;GAAMF,Q;UAIsEL,gB;;;KAJtEK,Q;;AAgEN,MAAMgB,IAAI,GAAG,QAAY;EAAA,IAAX;IAACd;EAAD,CAAW;EACrB,MAAM;IAAEe,IAAF;IAAQC,WAAR;IAAqBC,SAArB;IAAgCC,aAAhC;IAA+CC,QAA/C;IAAyDC,IAAzD;IAA+DC;EAA/D,IAA0ErB,IAAhF;EACA,MAAMsB,WAAW,GAAGD,MAAM,CAACE,KAAP,CAAa,CAAb,EAAe,EAAf,CAApB;EACA,MAAMC,UAAU,GAAGF,WAAW,CAACG,MAAZ,GAAqB,CAArB,gBAAyB,QAAC,UAAD;IAAY,MAAM,EAAEH;EAApB;IAAA;IAAA;IAAA;EAAA,QAAzB,GAA8D,yBAAjF;EACA,IAAII,OAAO,GAAGR,aAAa,CAACS,SAAd,CAAwBT,aAAa,CAACU,WAAd,CAA0B,GAA1B,IAAiC,CAAzD,MAAgE,qBAA9E;EACA,IAAIC,YAAY,GAAGH,OAAO,GAAG,SAAH,GAAe,EAAzC;EACA,oBACI;IAAA,wBACK;MAAK,SAAS,EAAC,cAAf;MAAA,wBACO;QAAK,SAAS,EAAG,GAAEG,YAAa,EAAhC;QAAmC,GAAG,EAAEZ,SAAxC;QAAmD,GAAG,EAAEF;MAAxD;QAAA;QAAA;QAAA;MAAA,QADP,eAEO;QAAA,wBACI;UAAK,SAAS,EAAC,iBAAf;UAAA,UAAkCA;QAAlC;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,YAAf;UAAA,wBACI;YAAG,IAAI,EAAEI,QAAT;YAAmB,SAAS,EAAC,qBAA7B;YAAA,uBACI;cAAK,SAAS,EAAC,OAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAII;YAAG,IAAI,EAAEC,IAAT;YAAe,SAAS,EAAC,0BAAzB;YAAA,uBACI;cAAK,SAAS,EAAC,OAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFP;IAAA;MAAA;MAAA;MAAA;IAAA,QADL,eAeQ;MAAK,SAAS,EAAC,aAAf;MAAA,UACCJ;IADD;MAAA;MAAA;MAAA;IAAA,QAfR,EAiBSQ,UAjBT;EAAA,gBADJ;AAqBH,CA3BD;;MAAMV,I;;AA8BN,MAAMgB,UAAU,GAAG,SAAc;EAAA,IAAb;IAACT;EAAD,CAAa;EAGzB,oBACI;IAAA,wBACA;MAAK,SAAS,EAAC,cAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEI;MAAI,SAAS,EAAC,mBAAd;MAAA,UAEQA,MAAM,CAACU,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,KAAa;QACpB,oBACG;UAAY,SAAS,EAAC,mBAAtB;UAAA,UACMD,IAAI,CAACjB;QADX,GAASkB,CAAT;UAAA;UAAA;UAAA;QAAA,QADH;MAMH,CAPD;IAFR;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAiBP,CApBD;;MAAMH,U;AAuBNhC,QAAQ,CAACoC,SAAT,GAAqB;EACjBzB,MAAM,EAAEjB,SAAS,CAAC2C;AADD,CAArB;AAKA,eAAerC,QAAf"},"metadata":{},"sourceType":"module"}