{"version":3,"sources":["components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/thor.jpeg","components/errorBoundary/errorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","resources/img/UW.png","resources/img/x-men.png","components/pages/ComicsPage.js","components/pages/404.js","components/pages/SingleComicPage.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","thumbnailPath","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","className","alt","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","chars","setCharlist","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","createList","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","i","ref","el","tabIndex","onCharSelected","onKeyPress","e","key","disabled","Skeleton","comicsSlice","slice","comicsList","containStyle","substring","lastIndexOf","ComicsList","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","this","setState","children","Component","MainPage","selectedChar","decoration","AppBanner","avengers","avengersLogo","setComicsList","setComicsEnded","newComicsList","ComicsEnded","arr","to","renderItems","ComicsPage","Page404","comic","SingleComic","comicId","useParams","setComic","updateComic","onComicLoaded","AppHeader","end","color","isActive","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8960eca.chunk.js","sourcesContent":["const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#9F0013\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#9F0013\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#9F0013\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#9F0013\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#9F0013\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#9F0013\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#9F0013\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#9F0013\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n        style={{ display: 'block', width: '250px', height: '250px', objectFit:'contain', margin: \"0 auto\" }}\r\n        src={img} />    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n   const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n   const  _apiKey = 'apikey=7e218a62ee6da0dcd851c113e2e277eb';\r\n//    const _apiKey = 'apikey=bd19ba0a0373b6d52ce8b100dfe07355';\r\n   const _baseOffset = 210;\r\n\r\n    \r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n    const getCharacter = async (id) => {  \r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n        return _transformCharacter( res.data.results[0]);\r\n    }\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n    const getComic = async (id) => {  \r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n        return _transformComics( res.data.results[0]);\r\n    }\r\n    const _transformCharacter = (char) => {\r\n        return{\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnailPath: char.thumbnail.path,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n    const _transformComics = (comics) => {\r\n        return{\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description,\r\n            thumbnailPath: comics.thumbnail.path,\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No info about the number of pages',\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices.price ? `${comics.prices.price}` : 'not avaliable'\r\n        }\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic}\r\n}\r\n\r\n\r\nexport default useMarvelService;"," import { useState, useCallback } from \"react\";\n\n export const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        setLoading(true);\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if(!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json()\n\n            setLoading(false);\n            return data;\n        } catch (e) {\n\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n\n    }, [])\n\n    const clearError = useCallback( () => setError(null), []);\n\n    return {loading, request, error, clearError}\n }","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {useState, useRef, useEffect} from 'react';\nimport {PropTypes} from 'prop-types';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport './charList.scss';\n\n\n\n\nconst CharList = (props) => {\n\n    const [chars, setCharlist] = useState([]); \n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    // focusRef = React.createRef();\n    const {loading, error, getAllCharacters} = useMarvelService();\n   \n    // const marvelService = useMarvelService();\n\n    useEffect (() => {\n        onRequest(offset, true);\n    }, [])\n     \n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n        .then(createList) \n    } \n \n \n    const createList = (newCharList) => { \n        let ended = false; \n        if (newCharList.length < 9){\n            ended = true;\n        }\n \n        setCharlist(chars => [...chars, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n\n    } \n    const itemRefs = useRef([]);\n    \n    const focusOnItem = (id) => {\n \n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n \n        const elements = chars.map ((item, i) => {\n        const {name, thumbnail, id} = item; \n            return ( \n                 <li className=\"char__item\"\n                 key={id}\n                 ref={el => itemRefs.current[i] = el}\n                 tabIndex={0}\n                 onClick={() => {\n                    props.onCharSelected(id);\n                    focusOnItem(i)\n                }}\n                 onKeyPress={(e) => {\n                     if (e.key === ' ' || e.key === \"Enter\") {\n                         props.onCharSelected(id);\n                         focusOnItem(i);\n                     }\n                 }}> \n                        <img src={thumbnail} alt={name}/>\n                        <div className=\"char__name\">{name}</div>\n                    </li> \n            )\n        });\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n        return (\n            <div className=\"char__list\">\n                <ul className=\"char__grid\">\n                {errorMessage}\n                {spinner}\n                {elements}\n                </ul>\n                <button className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        ) \n}\n\nCharList.propTypes = { \n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {useState, useEffect} from'react';\nimport {PropTypes} from 'prop-types';\nimport './charInfo.scss';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton' \nimport thor from '../../resources/img/thor.jpeg';\n\nconst CharInfo = (props) => {\n \n    const [char, setChar] = useState (null);\n \n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect (() => {\n        updateChar();\n    }, [props.charId])\n  \n    const updateChar = () => {  \n        const {charId} = props; \n        if (!charId) {\n            return;\n        } \n            clearError();\n            getCharacter(charId) \n            .then(onCharLoaded)  \n    }\n  \n    const onCharLoaded = (char) => {  \n        setChar (char);  \n    }\n  \n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n        \n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n            \n        ) \n}\n\n\nconst View = ({char}) => {\n    const { name, description, thumbnail, thumbnailPath, homepage, wiki, comics } = char;\n    const comicsSlice = comics.slice(0,10); \n    const comicsList = comicsSlice.length > 0 ? <ComicsList comics={comicsSlice}/> : 'There is no comics here';\n    let tempImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('/') + 1) === 'image_not_available'\n    let containStyle = tempImg ? 'contain' : '';\n    return(\n        <>\n             <div className=\"char__basics\"> \n                    <img className={`${containStyle}`} src={thumbnail} alt={name}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">Homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                {description}</div>\n                {comicsList}\n        </>\n    )\n}\n\n\nconst ComicsList = ({comics}) => {\n\n\n        return(\n            <>\n            <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    { \n                        comics.map((item, i) => {\n                            return(\n                               <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li> \n                            )\n                              \n                        })\n                    } \n                </ul>\n            </>\n        )\n}\n\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/thor.533e3a5e.jpeg\";","import {Component} from'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        } \r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from 'react';\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport ErrorBoundary from \"../errorBoundary/errorBoundary\";\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage =() => {\n\n    const [selectedChar, setChar] = useState(null);\n \n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n \n\n    return (\n        <>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n                     <div className=\"char__content\">\n            <ErrorBoundary>\n                     <CharList onCharSelected={onCharSelected}/>\n            </ErrorBoundary>\n            <ErrorBoundary> \n                     <CharInfo charId={selectedChar}/>\n            </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )\n}\n\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom'\nimport useMarvelService from '../../services/MarvelService'\nimport './comicsList.scss';\nimport uw from '../../resources/img/UW.png';\nimport xMen from '../../resources/img/x-men.png';\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect (() => {\n        onRequest(offset, true)\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n        .then(createList)\n    }\n\n    const createList = (newComicsList) => {\n        let ended = false; \n        if (newComicsList.length < 9){\n            ended = true;\n        }\n        setComicsList(comics => [...comics, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ComicsEnded => ended);\n    }\n\n    function renderItems (arr) {\n        \n        const items = arr.map((item, i) => {\n            const {title, thumbnail, price} = item;\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={thumbnail} alt={title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </Link>\n                </li>\n            )\n        })\n  \n        return ( \n                <ul className=\"comics__grid\">\n                    {items} \n                </ul> \n        ) \n    }\n    const items = renderItems(comicsList);\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null; \n   \n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n                {items} \n            <button className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/UW.422636b4.png\";","export default __webpack_public_path__ + \"static/media/x-men.41b39e19.png\";","import AppBanner from '../appBanner/AppBanner';\nimport ComicsList from '../comicsList/ComicsList'\n\nconst ComicsPage = () => {\n\n        return (\n            <>\n                <AppBanner/> \n                <ComicsList/>  \n            </>\n            \n        )\n}\n\nexport default ComicsPage;","import ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport {Link} from 'react-router-dom';\n\nconst Page404 = () => {\n    return (\n        <div>\n            <ErrorMessage/>\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize' : '24px', 'marginTop': '30px'}}>\n                PAge doesn't exist\n            </p>\n            <Link style={{'display' : 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize' : '24px', 'marginTop': '30px'}} to=\"/\">\n                Back to main page\n            </Link>\n        </div>\n    )\n}\n\nexport default Page404;","import { useParams, Link } from 'react-router-dom';\nimport {useEffect, useState} from 'react';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport './singleComic.scss';\nimport xMen from '../../resources/img/x-men.png'; \n\nconst SingleComic = () => {\n\n    const {comicId} = useParams();\n    const [comic, setComic] = useState(null);\n    const {loading, error, getComic, clearError} = useMarvelService();\n\n    useEffect (() => {\n        updateComic();\n    }, [comicId])\n  \n    const updateComic = () => {  \n            clearError();\n            getComic(comicId) \n            .then(onComicLoaded)  \n    }\n  \n    const onComicLoaded = (comic) => {  \n        setComic (comic);  \n    }\n\n      const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\n        \n\n    return (\n        <>\n                {errorMessage}\n                {spinner}\n                {content}   \n        </>\n    )\n}\n\nconst View = ( {comic}) => {\n\n    const {title, description, pageCount, thumbnail, language, price} = comic;\n\n    return (\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComic;","import './appHeader.scss';\nimport {Link, NavLink} from 'react-router-dom';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                    end\n                    style={({ isActive }) => ({color: isActive ? '#9f0013' : 'inherit'})}\n                    to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink \n                    end \n                    style={({ isActive }) => ({color: isActive ? '#9f0013' : 'inherit'})}\n                    to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport { MainPage, ComicsPage, SingleComic} from '../pages';\nimport Page404 from '../pages/404'\nimport AppHeader from \"../appHeader/AppHeader\";\n\nconst App = () => {\n     return (\n            <Router>\n                <div className=\"app\">\n                    <AppHeader/>\n                    <main>\n                        <Routes>\n                            <Route path=\"/\" element={<MainPage/>}/>\n                            <Route path=\"/comics\" element={<ComicsPage/>}/>\n                            <Route path=\"/comics/:comicId\" element={<SingleComic/>}/>\n                            <Route path=\"*\" element={<Page404/>}></Route>\n                        </Routes>\n                    </main>\n                </div>\n            </Router>\n        ) \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App'; \nimport './style/style.scss';\n\n// чтобы работать с джес классами нужно создать экземпляр - потомок\n \n// marvelService.getAllCharacters().then(res => res.data.results.forEach(item => console.log(item.name)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}